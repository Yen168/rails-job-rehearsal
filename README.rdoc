
= Rails Rehearsal for interview.

https://secure-woodland-8209.herokuapp.com

* CRUD

* gem bootstrap-sass, simple_form

* ORM (belong_to, has_many)

* before_action

* gem devise

* heruku gem pg, rails_12factor 

* heroku run rake db:migrate

* has_many, belongs_to, :author & :owner into model

* group member control
rails g model group_user group_id:integer user_id:integer

* macro :participated_groups, is_member_of?(group)

* def join!(group) participated_groups << group end (user) 

* (route) member 
	
	member do
      post :join
      post :quit
    end

* .in_time_zone('Eastern Time (US & Canada)')

* .order("updated_at DESC") => SQL

* bye bye group.posts.count because SQL === SELECT COUNT(*) === FROM 'posts' WHERE 'posts'.'group_id' = 1..

* => rails g migration add_posts_count_to_group posts_count:integer

* counter_cache => counter_cache: :posts_count 

Q: group.posts.size & group.posts.count 
A: count => SQL

* delete group === delte all posts =>  has_many :posts, :dependent => :destroy



Q: @group.posts & @group.posts.all
A: .all -> SQL Select *

